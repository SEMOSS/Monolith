name: Build monolith
on:
  push:
    branches:
      - dev
      - main
  pull_request:
    branches:
      - dev
      - main
  workflow_dispatch:

env:
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  MAVEN_CLI_OPTS: "-s ./settings.xml --batch-mode"
  IMAGE: "registry.gitlab.com/finestructure/pipeline-trigger:2.9.0"
  MAVEN_REPO_TOKEN: ${{ vars.MAVEN_REPO_TOKEN }}
  MAVEN_REPO_TOKEN_PASS: ${{ vars.MAVEN_REPO_TOKEN_PASS }}
  WORKSPACE_DIR: /home/ubuntu/actions-runner/_work/Monolith/

jobs:
  build_semoss:
    runs-on: ubuntu-latest
    if: ${{ vars.RELEASE != 'TRUE' }}
    container:
      image: maven:3.8.6-jdk-8
    steps:
      - name: Clean existing repo
        run: rm -rf ${{ env.WORKSPACE_DIR }}
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Get current timestamp
        id: timestamp
        run: echo "TIMESTAMP=$(date +%s)" >> $GITHUB_ENV
      - name: Set up Python
        run: |
          apt-get update
          apt-get install -y python3 python3-pip
      - name: Install requests library
        run: pip install requests
      - name: list workspace contents
        run: |
          ls -lah
          pwd
      - name: Trigger Semoss Workflow
        env:
          GITHUB_TOKEN: ${{ secrets.SEMOSS_GITHUB_TOKEN }}
        run: python3 .github/workflows/trigger_workflow.py

  build_monolith_dev:
    needs: build_semoss
    runs-on: ubuntu-latest
    if: ${{ vars.RELEASE != 'TRUE'  && (github.event_name =='push' || github.event_name =='pull_request')  }}
    container:
      image: maven:3.8.6-jdk-8
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 8
        uses: actions/setup-java@v4
        with:
          distribution: "adopt"
          java-version: "8"

      - name: Update and install openjfx
        run: |
          rm -rf /var/lib/apt/lists/*
          apt-get update -y
          apt-get install -y openjfx

      - name: Clear Maven repository
        run: rm -rf .m2/repository/org/semoss

      - name: Build with Maven
        run: /usr/share/maven/bin/mvn $MAVEN_CLI_OPTS clean install -Dci.version=${{ vars.VERSION }}-SNAPSHOT

      - name: Clear Maven repository after build
        run: rm -rf .m2/repository/org/semoss

    #   - name: Upload artifact
    #     uses: actions/upload-artifact@v4
    #     with:
    #       name: monolith-${{ vars.VERSION }}-SNAPSHOT.war
    #       path: target/monolith-${{ vars.VERSION }}-SNAPSHOT.war

  build_monolith_deploy:
    needs: build_semoss
    runs-on: ubuntu-latest
    container:
      image: maven:3.8.6-jdk-8
    if: ${{ vars.RELEASE != 'TRUE'  && github.event_name =='workflow_dispatch' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: "8"

      - name: Update and install openjfx and gnupg2
        run: |
          rm -rf /var/lib/apt/lists/*
          apt-get update -y
          apt-get install -y openjfx gnupg2

      - name: Import GPG key
        run: |
          echo "${{ secrets.GPG_PRIVATE_KEY }}" | gpg2 --batch --import
          echo "keyserver keyserver.ubuntu.com" > ~/.gnupg/gpg.conf
          gpg2 --refresh-key

      - name: Clear Maven repository
        run: rm -rf .m2/repository/org/semoss

      - name: Deploy with Maven
        run: /usr/share/maven/bin/mvn $MAVEN_CLI_OPTS deploy -P deploy -Dci.version=${{ vars.VERSION }}-SNAPSHOT

      - name: Clear Maven repository after deploy
        run: rm -rf .m2/repository/org/semoss

    #   - name: Upload artifacts
    #     uses: actions/upload-artifact@v4
    #     with:
    #       name: monolith-${{ vars.VERSION }}-SNAPSHOT.war
    #       path: target/monolith-${{ vars.VERSION }}-SNAPSHOT.war

  build_monolith_release:
    runs-on: ubuntu-latest
    container:
      image: maven:3.8.6-jdk-8
    if: ${{ vars.RELEASE == 'TRUE' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: "8"

      - name: Update and install openjfx and gnupg2
        run: |
          rm -rf /var/lib/apt/lists/*
          apt-get update -y
          apt-get install -y openjfx gnupg2

      - name: Import GPG key
        run: |
          echo "${{ secrets.GPG_PRIVATE_KEY }}" | gpg2 --batch --import
          echo "keyserver keyserver.ubuntu.com" > ~/.gnupg/gpg.conf
          gpg2 --refresh-key

      - name: Clear Maven repository
        run: rm -rf .m2/repository/org/semoss

      - name: Release with Maven
        run: /usr/share/maven/bin/mvn $MAVEN_CLI_OPTS deploy -P deploy -Dci.version=${{ vars.VERSION }}

      - name: Clear Maven repository after release
        run: rm -rf .m2/repository/org/semoss

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: monolith-${{ vars.VERSION }}.war
          path: target/monolith-${{ vars.VERSION }}.war
