name: Build monolith

on:
  push:
    branches:
      - "**"
  workflow_dispatch:
    inputs:
      version:
        description: "Version"
        required: true
        default: "1.0.0"
      release:
        description: "Release"
        required: true
        default: "FALSE"
      sonarpush:
        description: "Sonar Push"
        required: true
        default: "FALSE"

env:
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  MAVEN_CLI_OPTS: "-s ./settings.xml --batch-mode"
  IMAGE: "registry.gitlab.com/finestructure/pipeline-trigger:2.9.0"
  URL: "repo.semoss.org"

jobs:
  build_semoss:
    runs-on: ubuntu-latest
    if: github.event.inputs.release != 'TRUE' && github.event.inputs.sonarpush != 'TRUE'
    container:
        image: maven:3.8.6-jdk-8
      steps:
        - name: Get current timestamp
          id: timestamp
          run: echo "TIMESTAMP=$(date +%s)" >> $GITHUB_ENV
        - name: Trigger semoss workflow
          run: |
            curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/SEMOSS/semoss/actions/workflows/104712412/dispatches \
            -d '{
                "ref":"svn/dev",
                "inputs":{
                "VERSION":"4.3.0",
                "RELEASE":"FALSE",
                "SKIP_TESTS":"true",
                "RUNJUNIT":"false",
                "SONARPUSH":"false",
                "TIMESTAMP":"${{ env.TIMESTAMP }}"
                }
            }'

  build_monolith_dev:
    runs-on: ubuntu-latest
    if: github.event.inputs.release != 'TRUE' && github.event.inputs.sonarpush != 'TRUE'
    container:
      image: maven:3.8.6-jdk-8
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: "8"

      - name: Update and install openjfx
        run: |
          rm -rf /var/lib/apt/lists/*
          apt-get update -y
          apt-get install -y openjfx

      - name: Clear Maven repository
        run: rm -rf .m2/repository/org/semoss

      - name: Build with Maven
        run: /usr/share/maven/bin/mvn $MAVEN_CLI_OPTS clean install -Dci.version=${{ github.event.inputs.version }}-SNAPSHOT

      - name: Clear Maven repository after build
        run: rm -rf .m2/repository/org/semoss

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: monolith-${{ github.event.inputs.version }}-SNAPSHOT.war
          path: target/monolith-${{ github.event.inputs.version }}-SNAPSHOT.war

  build_monolith_deploy:
    runs-on: ubuntu-latest
    container:
      image: maven:3.8.6-jdk-8
    if: github.event.inputs.release != 'TRUE'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: "8"

      - name: Update and install openjfx and gnupg2
        run: |
          rm -rf /var/lib/apt/lists/*
          apt-get update -y
          apt-get install -y openjfx gnupg2

      - name: Import GPG key
        run: |
          echo "${{ secrets.GPG_PRIVATE_KEY }}" | gpg2 --batch --import
          echo "keyserver keyserver.ubuntu.com" > ~/.gnupg/gpg.conf
          gpg2 --refresh-key

      - name: Clear Maven repository
        run: rm -rf .m2/repository/org/semoss

      - name: Deploy with Maven
        run: /usr/share/maven/bin/mvn $MAVEN_CLI_OPTS deploy -P deploy -Dci.version=${{ github.event.inputs.version }}-SNAPSHOT

      - name: Clear Maven repository after deploy
        run: rm -rf .m2/repository/org/semoss

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: monolith-${{ github.event.inputs.version }}-SNAPSHOT.war
          path: target/monolith-${{ github.event.inputs.version }}-SNAPSHOT.war

  build_monolith_release:
    runs-on: ubuntu-latest
    container:
      image: maven:3.8.6-jdk-8
    if: github.event.inputs.release == 'TRUE'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: "8"

      - name: Update and install openjfx and gnupg2
        run: |
          rm -rf /var/lib/apt/lists/*
          apt-get update -y
          apt-get install -y openjfx gnupg2

      - name: Import GPG key
        run: |
          echo "${{ secrets.GPG_PRIVATE_KEY }}" | gpg2 --batch --import
          echo "keyserver keyserver.ubuntu.com" > ~/.gnupg/gpg.conf
          gpg2 --refresh-key

      - name: Clear Maven repository
        run: rm -rf .m2/repository/org/semoss

      - name: Release with Maven
        run: /usr/share/maven/bin/mvn $MAVEN_CLI_OPTS deploy -P deploy -Dci.version=${{ github.event.inputs.version }}

      - name: Clear Maven repository after release
        run: rm -rf .m2/repository/org/semoss

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: monolith-${{ github.event.inputs.version }}.war
          path: target/monolith-${{ github.event.inputs.version }}.war
